{"version":3,"sources":["../src/mapAttributes.js"],"names":["mapAttributes","attrs","Object","keys","reduce","memo","key"],"mappings":";;;;;;AAEA;;;;AACA;;;;;;AAMA,IAAMA,gBAAmC,SAAnCA,aAAmC;AAAA,MAACC,KAAD,uEAAS,EAAT;AAAA,SAAgBC,OAAOC,IAAP,CACvDF,KADuD,EAEvDG,MAFuD,CAGvD,UAACC,IAAD,EAAOC,GAAP,EAAe;AACb,QAAIA,QAAQ,OAAZ,EAAqBD,KAAK,OAAL,IAAgB,gCAAiBJ,MAAM,OAAN,CAAjB,CAAhB,CAArB,KACKI,KAAK,wBAAcC,GAAd,KAAsBA,GAA3B,IAAkCL,MAAMK,GAAN,CAAlC;AACL,WAAOD,IAAP;AACD,GAPsD,EAQvD,EARuD,CAAhB;AAAA,CAAzC;;kBAWeL,a","file":"mapAttributes.js","sourcesContent":["// @flow\n\nimport attributesMap from './attributesMap';\nimport parseInlineStyle from './parseInlineStyle';\n\ntype Attrs = { [key: string]: string };\n\ntype MapAttributesFunc = (attrs: Attrs) => Attrs;\n\nconst mapAttributes: MapAttributesFunc = (attrs = {}) => Object.keys(\n  attrs\n).reduce(\n  (memo, key) => {\n    if (key === 'style') memo['style'] = parseInlineStyle(attrs['style']);\n    else memo[attributesMap[key] || key] = attrs[key];\n    return memo;\n  },\n  {}\n);\n\nexport default mapAttributes;\n"]}