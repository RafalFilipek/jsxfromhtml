{"version":3,"sources":["../src/step.js"],"names":["step","dom","index","parent","getTag","type","Component","name","indexOf","attribs","isParentBlock","children","map","item","data","trim"],"mappings":";;;;;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAoBA,IAAMA,OAAiB,SAAjBA,IAAiB,CAACC,GAAD,EAAMC,KAAN,EAAaC,MAAb,EAAqBC,MAArB,EAAgC;AACrD,MAAIH,IAAII,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,WAAO,IAAP;AACD;AACD,MAAIJ,IAAII,IAAJ,KAAa,KAAb,IAAsBJ,IAAII,IAAJ,KAAa,QAAnC,IAA+CJ,IAAII,IAAJ,KAAa,OAAhE,EAAyE;AACvE,QAAMC,YAAYF,OAAOH,IAAIM,IAAX,CAAlB;AACA,QAAID,cAAc,IAAlB,EAAwB;AACtB,aAAO,IAAP;AACD;AACD,QAAI,8BAAoBE,OAApB,CAA4BP,IAAIM,IAAhC,MAA0C,CAAC,CAA/C,EAAkD;AAChD,aAAO,8BAAC,SAAD,aAAW,KAAKL,KAAhB,IAA2B,6BAAcD,IAAIQ,OAAlB,CAA3B,EAAP;AACD;AACD,QAAMC,gBAAgBP,UAAU,yBAAeK,OAAf,CAAuBL,OAAOI,IAA9B,MAAwC,CAAC,CAAzE;AACA,QAAMI,YAAWD,gBACb,mCAAoBT,IAAIU,QAAxB,CADa,GAEbV,IAAIU,QAFR;AAGA,WACE;AAAC,eAAD;AAAA,iBAAW,KAAKT,KAAhB,IAA2B,6BAAcD,IAAIQ,OAAlB,CAA3B;AACGE,gBAASC,GAAT,CAAa,UAACC,IAAD,EAAOX,KAAP;AAAA,eAAiBF,KAAKa,IAAL,EAAWX,KAAX,EAAkBW,KAAKV,MAAvB,EAA+BC,MAA/B,CAAjB;AAAA,OAAb;AADH,KADF;AAKD;AACD,MAAIH,IAAII,IAAJ,KAAa,MAAjB,EAAyB;AACvB,QAAI,CAACJ,IAAIa,IAAJ,IAAY,EAAb,EAAiBC,IAAjB,OAA4B,EAAhC,EAAoC;AAClC,aAAO,IAAP;AACD;AACD,QAAIZ,UAAU,yBAAeK,OAAf,CAAuBL,OAAOI,IAA9B,MAAwC,CAAC,CAAvD,EAA0D;AACxD,aAAON,IAAIa,IAAJ,IAAY,IAAnB;AACD;AACD,QAAMR,aAAYF,OAAO,MAAP,CAAlB;AACA,WAAO;AAAC,gBAAD;AAAA,QAAW,KAAKF,KAAhB;AAAwBD,UAAIa;AAA5B,KAAP;AACD;AACD,SAAO,IAAP;AACD,CAjCD;;kBAmCed,I","file":"step.js","sourcesContent":["// @flow\n\nimport React from 'react';\n\nimport selfClosingElements from './selfClosingElements';\nimport mapAttributes from './mapAttributes';\nimport groupInlineElements from './groupInlineElements';\nimport inlineElements from './inlineElements';\n\ntype GetTagFunc = (name: string) => any;\n\nexport type DOMElement = {\n  type: 'tag' | 'text' | 'comment',\n  name: string,\n  data?: string,\n  attribs: { [key: string]: any },\n  children: DOMElement[],\n  parent?: DOMElement\n};\n\ntype StepFunc = (\n  dom: DOMElement,\n  index: number,\n  parent?: DOMElement | null,\n  getTag: GetTagFunc\n) => React.Element<*> | null | string;\n\nconst step: StepFunc = (dom, index, parent, getTag) => {\n  if (dom.type === 'comment') {\n    return null;\n  }\n  if (dom.type === 'tag' || dom.type === 'script' || dom.type === 'style') {\n    const Component = getTag(dom.name);\n    if (Component === null) {\n      return null;\n    }\n    if (selfClosingElements.indexOf(dom.name) !== -1) {\n      return <Component key={index} {...mapAttributes(dom.attribs)} />;\n    }\n    const isParentBlock = parent && inlineElements.indexOf(parent.name) === -1;\n    const children = isParentBlock\n      ? groupInlineElements(dom.children)\n      : dom.children;\n    return (\n      <Component key={index} {...mapAttributes(dom.attribs)}>\n        {children.map((item, index) => step(item, index, item.parent, getTag))}\n      </Component>\n    );\n  }\n  if (dom.type === 'text') {\n    if ((dom.data || '').trim() === '') {\n      return null;\n    }\n    if (parent && inlineElements.indexOf(parent.name) !== -1) {\n      return dom.data || null;\n    }\n    const Component = getTag('span');\n    return <Component key={index}>{dom.data}</Component>;\n  }\n  return null;\n};\n\nexport default step;\n"]}